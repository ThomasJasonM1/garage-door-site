{"version":3,"sources":["images/house.jpg","components/Card.jsx","pages/Home.jsx","components/Toolbar.jsx","components/Navbar.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","root","maxWidth","media","height","MediaCard","props","classes","Card","className","CardActionArea","CardMedia","image","title","imageTitle","CardContent","Typography","gutterBottom","variant","component","categoryTitle","color","description","CardActions","Button","size","Home","theme","gridStyles","flexGrow","subGridStyles","marginTop","breakpoints","down","Container","spacing","disableGutters","Grid","container","justify","alignContent","key","item","Toolbar","background","paddingBottom","paddingTop","textAlign","lineHeight","top","width","tabs","CenteredTabs","React","useState","value","setValue","Paper","Tabs","onChange","event","newValue","indicatorColor","textColor","centered","Tab","label","to","Link","Footer","BottomNavigation","BottomNavigationAction","icon","styles","body","flex","App","style","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wNAAAA,EAAOC,QAAU,IAA0B,mC,2LCU3C,MAAMC,EAAYC,YAAW,CACzBC,KAAM,CACFC,SAAU,KAEdC,MAAO,CACHC,OAAQ,OAID,SAASC,EAAUC,GAC9B,MAAMC,EAAUR,IAEhB,OACI,kBAACS,EAAA,EAAD,CAAMC,UAAWF,EAAQN,MACrB,kBAACS,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIF,UAAWF,EAAQJ,MACnBS,MAAON,EAAMM,MACbC,MAAOP,EAAMQ,aAEjB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC3Cb,EAAMc,eAEX,kBAACJ,EAAA,EAAD,CAAYE,QAAQ,QAAQG,MAAM,gBAAgBF,UAAU,KACvDb,EAAMgB,eAInB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQJ,MAAM,WAA3B,SAGA,kBAACG,EAAA,EAAD,CAAQC,KAAK,QAAQJ,MAAM,WAA3B,gBCsBDK,MA3DF,KACT,MAeMnB,EAfYP,YAAW2B,IAAK,CAC9B1B,KAAM,GAGN2B,WAAY,CACRC,SAAU,GAEdC,cAAe,CAEXC,UAAW,MACX,CAACJ,EAAMK,YAAYC,KAAK,OAAQ,CAC5BF,UAAW,UAIPhC,GAEhB,OACI,kBAACmC,EAAA,EAAD,CAAWzB,UAAWF,EAAQqB,WAAYO,QAAS,GAC/C,kBAACD,EAAA,EAAD,CAAWhC,SAAS,QAAQkC,gBAAc,GAEtC,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASJ,QAAS,EAAG1B,UAAWF,EAAQuB,cAAeU,aAAa,UACxF,kBAACH,EAAA,EAAD,CAAMI,IAAI,UAAUC,MAAI,GACpB,kBAAC,EAAD,CAAMjC,UAAWF,EAAQN,KAErBmB,cAAc,UACdE,YAAY,uIAEZV,MAAM,qCACNE,WAAW,8CAGnB,kBAACuB,EAAA,EAAD,CAAMI,IAAI,MAAMC,MAAI,GAChB,kBAAC,EAAD,CAAMjC,UAAWF,EAAQN,KAErBmB,cAAc,UACdE,YAAY,uIAEZV,MAAM,qCACNE,WAAW,8CAGnB,kBAACuB,EAAA,EAAD,CAAMI,IAAI,MAAMC,MAAI,GAChB,kBAAC,EAAD,CAAMjC,UAAWF,EAAQN,KAErBmB,cAAc,UACdE,YAAY,uIAEZV,MAAM,qCACNE,WAAW,kDC5BxB6B,MAxBC,KACZ,MAaMpC,EAbYP,YAAW,CACzBC,KAAM,CACF2C,WAAY,QACZvB,MAAO,QACPwB,cAAe,UACfC,WAAY,UACZC,UAAW,SACXC,WAAY,QAEZC,IAAK,EACLC,MAAO,SAGCnD,GAEhB,OACI,yBAAKU,UAAWF,EAAQN,MACpB,mDACA,uD,wCCfZ,MAAMF,EAAYC,YAAW,CACzBC,KAAM,CACF4B,SAAU,GAEdsB,KAAM,CACFtB,SAAU,KAIH,SAASuB,IACpB,MAAM7C,EAAUR,IADmB,EAETsD,IAAMC,SAAS,GAFN,mBAE5BC,EAF4B,KAErBC,EAFqB,KAQnC,OACI,oCAEA,kBAACC,EAAA,EAAD,CAAOhD,UAAWF,EAAQ4C,MAEtB,kBAACO,EAAA,EAAD,CACIH,MAAOA,EACPI,SAXS,CAACC,EAAOC,KACzBL,EAASK,IAWDC,eAAe,UACfC,UAAU,UACVC,UAAQ,GAER,kBAACC,EAAA,EAAD,CAAKC,MAAM,OAAOC,GAAG,QAAQhD,UAAWiD,MACxC,kBAACH,EAAA,EAAD,CAAKC,MAAM,UAAUC,GAAG,WAAWhD,UAAWiD,MAC9C,kBAACH,EAAA,EAAD,CAAKC,MAAM,YAAYC,GAAG,MAAMhD,UAAWiD,MAC3C,kBAACH,EAAA,EAAD,CAAKC,MAAM,WAAWC,GAAG,QAAQhD,UAAWiD,S,0FC/B5D,MAAMrE,EAAYC,YAAW,CACzBC,KAAM,CACFiD,MAAO,WAsBAmB,MAlBA,KACX,MAAM9D,EAAUR,IADC,EAESsD,IAAMC,SAAS,WAFxB,mBAEVC,EAFU,KAEHC,EAFG,KAQjB,OACI,kBAACc,EAAA,EAAD,CAAkBf,MAAOA,EAAOI,SALf,CAACC,EAAOC,KACzBL,EAASK,IAI+CpD,UAAWF,EAAQN,MACvE,kBAACsE,EAAA,EAAD,CAAwBL,MAAM,UAAUX,MAAM,UAAUiB,KAAM,kBAAC,IAAD,QAC9D,kBAACD,EAAA,EAAD,CAAwBL,MAAM,YAAYX,MAAM,YAAYiB,KAAM,kBAAC,IAAD,QAClE,kBAACD,EAAA,EAAD,CAAwBL,MAAM,SAASX,MAAM,SAASiB,KAAM,kBAAC,IAAD,QAC5D,kBAACD,EAAA,EAAD,CAAwBL,MAAM,SAASX,MAAM,SAASiB,KAAM,kBAAC,IAAD,UCfxE,MAAMC,EAAS,CACbC,KAAM,CACJC,KAAM,IA0BKC,MAtBH,IAER,kBAAC,IAAD,KACE,yBAAKC,MAAOJ,EAAOC,MACnB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAM,CAAC,IAAK,UACvB,kBAAC,EAAD,SAUJ,kBAAC,EAAD,OCzBcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,KAAKC,IACJA,EAAaC,eAEdC,MAAMC,IACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.faa82cdc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/house.e5c3d16a.jpg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 140,\n    }\n});\n\nexport default function MediaCard(props) {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root}>\n            <CardActionArea>\n                <CardMedia\n                    className={classes.media}\n                    image={props.image}\n                    title={props.imageTitle}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {props.categoryTitle}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {props.description}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button size=\"small\" color=\"primary\">\n                    Share\n                </Button>\n                <Button size=\"small\" color=\"primary\">\n                    Learn More\n                </Button>\n            </CardActions>\n        </Card>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Card from \"../components/Card\";\n\nconst Home = () => {\n    const useStyles = makeStyles(theme => ({\n        root: {\n            // marginTop: '1em',\n        },\n        gridStyles: {\n            flexGrow: 1,\n        },\n        subGridStyles: {\n            // height: '90vh',\n            marginTop: '15%',\n            [theme.breakpoints.down('md')]: {\n                marginTop: '1em',\n              },\n        },\n    }));\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.gridStyles} spacing={2}>\n            <Container maxWidth=\"false\" disableGutters>\n            {/* item sm={'auto'} > */}\n                <Grid container justify=\"center\" spacing={7} className={classes.subGridStyles} alignContent='center'> \n                    <Grid key='Repairs' item>\n                        <Card className={classes.root}\n                            \n                            categoryTitle=\"Repairs\"\n                            description=\"Garage door repairs are never fun and often very inconvenient. \n                                Trust our experts to accurately resolve any issue in a timely manor!\"\n                            image=\"../static/media/broken-springs.jpg\"\n                            imageTitle=\"Ugh, how will I get my car out of here?!\"\n                        /> \n                    </Grid>\n                    <Grid key='New' item>\n                        <Card className={classes.root}\n                            \n                            categoryTitle=\"Repairs\"\n                            description=\"Garage door repairs are never fun and often very inconvenient. \n                                Trust our experts to accurately resolve any issue in a timely manor!\"\n                            image=\"../static/media/broken-springs.jpg\"\n                            imageTitle=\"Ugh, how will I get my car out of here?!\"\n                        /> \n                    </Grid>\n                    <Grid key='New' item>\n                        <Card className={classes.root}\n                            \n                            categoryTitle=\"Repairs\"\n                            description=\"Garage door repairs are never fun and often very inconvenient. \n                                Trust our experts to accurately resolve any issue in a timely manor!\"\n                            image=\"../static/media/broken-springs.jpg\"\n                            imageTitle=\"Ugh, how will I get my car out of here?!\"\n                        /> \n                    </Grid>\n                </Grid>\n            </Container>\n        </Container>\n    );\n};\n\nexport default Home;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withTheme } from '@material-ui/styles';\n\nconst Toolbar = () => {\n    const useStyles = makeStyles({\n        root: {\n            background: 'black',\n            color: 'white',\n            paddingBottom: '0.001em',\n            paddingTop: '0.001em',\n            textAlign: 'center',\n            lineHeight: '.25em',\n            // position: 'fixed',\n            top: 0,\n            width: '100%',\n        }\n    });\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <h2 >Todd's Garage Doors</h2>\n            <h3>Installation & Repair</h3>\n        </div>\n    )\n};\n\nexport default Toolbar;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport bgImage from '../images/house.jpg';\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n    tabs: {\n        flexGrow: 1,\n    }\n});\n\nexport default function CenteredTabs() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <>\n        {/* <h1 className={classes.root}>Todd's Garage Door Installation & Repair</h1> */}\n        <Paper className={classes.tabs}>\n            \n            <Tabs\n                value={value}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                centered\n            >\n                <Tab label=\"Home\" to=\"/home\" component={Link} />\n                <Tab label=\"Service\" to=\"/service\" component={Link} />\n                <Tab label=\"New Doors\" to=\"new\" component={Link} />\n                <Tab label=\"About Us\" to=\"about\" component={Link} />\n            </Tabs>\n        </Paper>\n        </>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100vw',\n    },\n});\n\nconst Footer = () => {\n    const classes = useStyles();\n    const [value, setValue] = React.useState('recents');\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\n            <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<RestoreIcon />} />\n            <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon />} />\n            <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} />\n            <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<FolderIcon />} />\n        </BottomNavigation>\n    );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"./App.css\";\nimport Home from \"./pages/Home\";\n// import CharitySearch from \"./pages/CharitySearch\";\nimport Toolbar from \"./components/Toolbar\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\n// import Organization from \"./pages/Organization\";\n// import Profile from \"./pages/Profile\";\n// import SearchDetails from \"./pages/SearchDetails\";\n\nconst styles = {\n  body: {\n    flex: 1,\n  }\n};\n\nconst App = () => {\n  return (\n    <Router>\n      <div style={styles.body}>\n      <Toolbar />\n      <Navbar />\n      <Switch>\n        <Route exact path={[\"/\", \"/home\"]}>\n          <Home />\n        </Route>\n        {/* <Route exact path={[\"/search\"]}>\n          <CharitySearch />\n        </Route>\n        <Route exact path={[\"/profile\"]}>\n          <Profile />\n        </Route> */}\n      </Switch> \n      </div>\n      <Footer />\n    </ Router>\n  );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}